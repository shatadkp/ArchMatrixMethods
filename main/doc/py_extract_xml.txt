7
•  Axiom 1-2: Establish customer_A as a CommercialOrganization that uses aircraft.
•  Axiom 3-4: Define that customer_A and aircraft participate_in each flight.
•  Axiom 5-6: For each flight, there exists a flight_operational_condition (a Quality) that inheres_in the flight and is measured_by flight_data.
•  Axiom 7-8: The certified_flight_envelope (a DirectiveInformationContentEntity) prescribes flight_operational_condition_limits which are about the flight_operational_condition.
•  Axiom 9: A compliance_assessment (an Act) has_input the flight_data and certified_flight_envelope, and has_output a compliance_result that is about the flight.
•  Axiom 10: For each operational_parameter (op) in the flight_operational_condition and its corresponding operational_parameter_limit (opl), the actual value must be less than or equal to the limit value.
•  Axiom 11: A flight is Compliant if all its operational_parameters comply with the corresponding operational_parameter_limits.
•  Axiom 12: customer_A OperatesWithinEnvelope if all flights they participate in are Compliant.


•	Functions:
o	value_actual(op) returns the actual measured value of operational_parameter op.
o	value_limit(opl) returns the limit value of operational_parameter_limit opl.
Axioms
1.	Customer A is a Commercial Organization
o	CommercialOrganization(customer_A)
2.	Customer A Uses Aircraft
o	uses(customer_A, aircraft)
o	Aircraft(aircraft)
3.	Customer A Participates in Flights
o	∀flight [ Flight(flight) ∧ participates_in(customer_A, flight) ]
4.	Aircraft Participates in Flights
o	∀flight [ participates_in(aircraft, flight) ]
5.	Flight Operational Condition Inheres in Flight
o	∀flight ∃foc [ Quality(foc) ∧ inheres_in(foc, flight) ]
6.	Flight Operational Condition is Measured by Flight Data
o	∀foc ∃flight_data [ MeasurementInformationContentEntity(flight_data) ∧ is_measured_by(foc, flight_data) ]
7.	Certified Flight Envelope Prescribes Flight Operational Condition Limits
o	DirectiveInformationContentEntity(certified_flight_envelope)
o	∃focl [ MeasurementInformationContentEntity(focl) ∧ prescribes(certified_flight_envelope, focl) ]
8.	Flight Operational Condition Limits is About Flight Operational Condition
o	∀focl ∃foc [ is_about(focl, foc) ]
9.	Compliance Assessment Act
o	∃compliance_assessment [ Act(compliance_assessment) ∧ has_input(compliance_assessment, flight_data) ∧ has_input(compliance_assessment, certified_flight_envelope) ∧ has_output(compliance_assessment, compliance_result) ]
o	InformationContentEntity(compliance_result)
o	is_about(compliance_result, flight)
10.	Operational Parameters and Limits Comparison
o	∀op, opl [ (inheres_in(op, flight_operational_condition) ∧ is_about(opl, op)) → (value_actual(op) ≤ value_limit(opl)) ]
11.	Flight Compliance
o	∀flight [ (Flight(flight) ∧ participates_in(customer_A, flight)) → (∀op, opl [ (inheres_in(op, flight_operational_condition) ∧ is_about(opl, op)) → (value_actual(op) ≤ value_limit(opl)) ]) → Compliant(flight) ]
12.	Customer A Operates Within Certified Flight Envelope
o	[ ∀flight [ (Flight(flight) ∧ participates_in(customer_A, flight)) → Compliant(flight) ] ] → OperatesWithinEnvelope(customer_A)

